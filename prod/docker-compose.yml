version: '3.8'

services:
  web:
    build: ./web
    container_name: web_container
    ports:
      - "1703:1703"
    depends_on:
      - postgres
    networks:
      - backend
    environment:
      READY: 1
      PYTHONUNBUFFERED: 1
      FLASK_ENV: production
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "echo $READY" ]
      interval: 5s
      timeout: 3s
      retries: 5

  dckesc:
    build: ./dckesc
    container_name: dckesc_container
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REGISTRY_USERNAME=${REGISTRY_USERNAME}
      - REGISTRY_PASSWORD=${REGISTRY_PASSWORD}
    ports:
      - "12936:22"
    depends_on:
      web:
        condition: service_healthy
    networks:
      - backend

  postgres:
    image: postgres:latest
    container_name: my_postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  registry:
    image: registry:2
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./registry_data:/var/lib/registry
      - ./auth:/auth
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      REGISTRY_AUTH: "htpasswd"
      REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
      REGISTRY_AUTH_HTPASSWD_PATH: "/auth/htpasswd"
    networks:
      - backend

networks:
  backend:
    driver: bridge
